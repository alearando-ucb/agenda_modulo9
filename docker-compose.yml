
services:
  discoveryservice:
    image: alearandoesp/discoveryservice:1.0.0
    container_name: discoveryservice
    hostname: discoveryservice
    ports:
      - "8761:8761"
    environment:
      - SERVER_PORT=8761
    networks:
      - backend_network
    restart: unless-stopped
  
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: rabbitmq
    env_file:
      - ./.env
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USERNAME}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - backend_network
    restart: unless-stopped
  
  userservice_db:
    image: mysql:8.0
    container_name: userservice_db
    hostname: userservice_db
    env_file:
      - ./.env
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_DATABASE=${USER_DB_NAME}
      - MYSQL_USER=${USER_DB_USERNAME}
      - MYSQL_PASSWORD=${USER_DB_PASSWORD}
    volumes:
      - userservice_db_data:/var/lib/mysql
    ports:
      - "3307:3306"
    networks:
      - userservice_network
    restart: unless-stopped

  agendaservice_db:
    image: mysql:8.0
    container_name: agendaservice_db
    hostname: agendaservice_db
    env_file:
      - ./.env
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_DATABASE=${AGENDA_DB_NAME}
      - MYSQL_USER=${AGENDA_DB_USERNAME}
      - MYSQL_PASSWORD=${AGENDA_DB_PASSWORD}
    volumes:
      - agendaservice_db_data:/var/lib/mysql
    ports:
      - "3308:3306"
    networks:
      - agendaservice_network
    restart: unless-stopped

  userservice:
    image: alearandoesp/userservice:1.0.0
    container_name: userservice
    hostname: userservice
    env_file:
      - ./.env
    ports:
      - "8081:8081"
    environment:
      - SERVER_PORT=8081
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discoveryservice:8761/eureka/
      - DB_SERVER=userservice_db
      - DB_NAME=${USER_DB_NAME}
      - DB_USERNAME=${USER_DB_USERNAME}
      - DB_PASSWORD=${USER_DB_PASSWORD}
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USERNAME=${RABBITMQ_USERNAME}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
    networks:
      - backend_network
      - userservice_network
    depends_on:
      - discoveryservice
      - userservice_db
      - rabbitmq
    restart: unless-stopped
    volumes:
      - userservice_avatars_data:/app/avatars

  agendaservice:
    image: alearandoesp/agendaservice:1.0.0
    container_name: agendaservice
    hostname: agendaservice
    env_file:
      - ./.env
    ports:
      - "8082:8082"
    environment:
      - SERVER_PORT=8082
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discoveryservice:8761/eureka/
      - DB_SERVER=agendaservice_db
      - DB_NAME=${AGENDA_DB_NAME}
      - DB_USERNAME=${AGENDA_DB_USERNAME}
      - DB_PASSWORD=${AGENDA_DB_PASSWORD}
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USERNAME=${RABBITMQ_USERNAME}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
    networks:
      - backend_network
      - agendaservice_network
    depends_on:
      - discoveryservice
      - agendaservice_db
      - rabbitmq
    restart: unless-stopped

  gatewayservice:
    image: alearandoesp/gatewayservice:1.0.0
    container_name: gatewayservice
    hostname: gatewayservice
    ports:
      - "8080:8080"
    environment:
      - SERVER_PORT=8080
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discoveryservice:8761/eureka/
    networks:
      - frontend_network
      - backend_network
    depends_on:
      - discoveryservice
      - userservice
      - agendaservice
    restart: unless-stopped
  
  agendaclient:
    image: alearandoesp/agendaclient:1.0.0
    container_name: agendaclient
    hostname: agendaclient
    env_file:
      - ./.env
    ports:
      - "9090:80"
    environment:
      - REACT_APP_API_BASE_URL=http://gatewayservice:8080/api/v1
    networks:
      - frontend_network
    depends_on:
      - gatewayservice
    restart: unless-stopped

volumes:
  # Vol√∫menes para bases de datos MySQL
  userservice_db_data:
    name: userservice_db_data
    driver: local
  
  agendaservice_db_data:
    name: agendaservice_db_data
    driver: local
  
  # Volumen para RabbitMQ
  rabbitmq_data:
    name: rabbitmq_data
    driver: local

  userservice_avatars_data:
    name: userservice_avatars_data
    driver: local

networks:
  # Red para frontend (React + Gateway)
  frontend_network:
    name: frontend_network
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/24
  
  # Red para backend (Gateway + Microservicios + Eureka + RabbitMQ)
  backend_network:
    name: backend_network
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/24
  
  # Red para bases de datos (Microservicios + MySQL)
  userservice_network:
    name: userservice_network
    driver: bridge
    ipam:
      config:
        - subnet: 172.22.0.0/24
  
  agendaservice_network:
    name: agendaservice_network
    driver: bridge
    ipam:
      config:
        - subnet: 172.23.0.0/24