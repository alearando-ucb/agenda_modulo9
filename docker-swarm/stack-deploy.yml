version: "3.8"

services:
  discoveryservice:
    image: alearandoesp/discoveryservice:${DISCOVERY_TAG:-1.0.0}
    environment:
      SERVER_PORT: 8761
    ports:
      - "8761:8761"
    networks:
      - backend_network
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  rabbitmq:
    image: rabbitmq:3-management
    env_file:
      - ./.env
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USERNAME}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - backend_network
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  userservice_db:
    image: mysql:8.0
    env_file:
      - ./.env
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${USER_DB_NAME}
      MYSQL_USER: ${USER_DB_USERNAME}
      MYSQL_PASSWORD: ${USER_DB_PASSWORD}
    volumes:
      - userservice_db_data:/var/lib/mysql
    networks:
      - userservice_network
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  agendaservice_db:
    image: mysql:8.0
    env_file:
      - ./.env
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${AGENDA_DB_NAME}
      MYSQL_USER: ${AGENDA_DB_USERNAME}
      MYSQL_PASSWORD: ${AGENDA_DB_PASSWORD}
    volumes:
      - agendaservice_db_data:/var/lib/mysql
    networks:
      - agendaservice_network
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  userservice:
    image: alearandoesp/userservice:${USER_TAG:-1.0.0}
    env_file:
      - ./.env
    environment:
      SERVER_PORT: 8081
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discoveryservice:8761/eureka/
      DB_SERVER: userservice_db
      DB_NAME: ${USER_DB_NAME}
      DB_USERNAME: ${USER_DB_USERNAME}
      DB_PASSWORD: ${USER_DB_PASSWORD}
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USERNAME: ${RABBITMQ_USERNAME}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
    ports:
      - "8081:8081"
    volumes:
      - ./avatars:/app/avatars
    networks:
      - backend_network
      - userservice_network
    depends_on:
      - discoveryservice
      - userservice_db
      - rabbitmq
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure

  agendaservice:
    image: alearandoesp/agendaservice:${AGENDA_TAG:-1.0.0}
    env_file:
      - ./.env
    environment:
      SERVER_PORT: 8082
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discoveryservice:8761/eureka/
      DB_SERVER: agendaservice_db
      DB_NAME: ${AGENDA_DB_NAME}
      DB_USERNAME: ${AGENDA_DB_USERNAME}
      DB_PASSWORD: ${AGENDA_DB_PASSWORD}
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USERNAME: ${RABBITMQ_USERNAME}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
    ports:
      - "8082:8082"
    networks:
      - backend_network
      - agendaservice_network
    depends_on:
      - discoveryservice
      - agendaservice_db
      - rabbitmq
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure

  gatewayservice:
    image: alearandoesp/gatewayservice:${GATEWAY_TAG:-1.0.0}
    environment:
      SERVER_PORT: 8080
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discoveryservice:8761/eureka/
    ports:
      - "8080:8080"
    networks:
      - frontend_network
      - backend_network
    depends_on:
      - discoveryservice
      - userservice
      - agendaservice
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure

  agendaclient:
    image: alearandoesp/agendaclient:${CLIENT_TAG:-1.0.0}
    env_file:
      - ./.env
    environment:
      REACT_APP_API_BASE_URL: http://gatewayservice:8080/api/v1
    ports:
      - "9090:80"
    networks:
      - frontend_network
    depends_on:
      - gatewayservice
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure

volumes:
  userservice_db_data:
  agendaservice_db_data:
  rabbitmq_data:

networks:
  frontend_network:
    driver: overlay
  backend_network:
    driver: overlay
  userservice_network:
    driver: overlay
  agendaservice_network:
    driver: overlay